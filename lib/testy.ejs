<!DOCTYPE html>
<html>
<head>
  <title>Test</title>

  <script src="/browser-source-map-support.js"></script>
  <script>sourceMapSupport.install();</script>

  <!-- Mocha -->
  <link rel="stylesheet" href="/mocha.css"/>

  <!-- Socket.io -->
  <script src="/socket.io/socket.io.js"></script>
  <script src="/mocha.js"></script>
  <script>

    if (!window.console) {
      window.console = {
        log   : function () { return; },
        info  : function () { return; },
        warn  : function () { return; },
        error : function () { return; }
      };
    }
    if (!window.process) {
      window.process = {
        stdout: {
          write: function () {
            return window.console.log.apply(window.console, arguments);
          }
        },
        stderr: {
          write: function () {
            return window.console.log.apply(window.console, arguments);
          }
        },
      };
      Mocha.process.stdout = window.process.stdout;
      Mocha.process.stderr = window.process.stderr;
    }

    var socket = io.connect();
    socket.on('reload', function () {
      document.location.reload();
    });


    function configureOutput() {
      var originalLog   = console.log;

      console.info = console.log = function() {
        var args = Array.prototype.slice.call(arguments).map(encodeURI);
        args.push('\n')
        socket.emit('stdout', args);
      }

      console.warn = console.error = function() {
        var args = Array.prototype.slice.call(arguments).map(encodeURI);
        args.push('\n')
        socket.emit('stderr', args);
      }

      console.trace = function () {
        try {
          throw new Error();
        } catch (e) {
          var stack = e.stack;
          if (stack) {
            stack = stack.split('\n').slice(2).join('\n');
            process.stdout.write(stack + '\n');
          }
        }
      }

      window.process = {
        stdout: { write: function() {
          var args = Array.prototype.slice.call(arguments);
          socket.emit('stdout', args.map(encodeURI));
        }},
        stderr: { write: function() {
          var args = Array.prototype.slice.call(arguments);
          socket.emit('stderr', args.map(encodeURI));
        }},
      };
      Mocha.process.stdout = window.process.stdout;
      Mocha.process.stderr = window.process.stderr;
    }


    var launched=false;

    socket.on('launch', function(options) {
      if(launched) {
        return document.location.reload();
      } else {
        launched = true;
      }

      if(options.reporter !== 'html') {
        configureOutput()
      }

      mocha.checkLeaks();
      mocha.reporter(options.reporter || 'html')
      mocha.run(function() {
        socket.emit('end');
      });
    })

    socket.on('whoareu', function() {
      socket.emit('whoiam', window.navigator.userAgent)
    })


  </script>

</head>
<body>

<div id="mocha"></div>

<script>mocha.setup('bdd')</script>

<!-- Tests suite -->
<% tests.forEach(function(test) { %>
<script src="/tests?id=<%= test %>"></script>
<% }) %>
<script>
  // mocha.checkLeaks();
  // mocha.reporter('spec')
  // mocha.run(function(err) {
  //   socket.emit('end', err);
  // });
</script>


</body>
</html>
